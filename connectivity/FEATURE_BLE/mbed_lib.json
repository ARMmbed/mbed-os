{
    "name": "ble",
    "requires": ["ble-api-implementation"],
    "config": {
        "present": 1,
        "ble-role-observer": {
            "help": "Include observer BLE role support (scanning for and processing advertising packets).",
            "value": true,
            "macro_name": "BLE_ROLE_OBSERVER"
        },
        "ble-role-broadcaster": {
            "help": "Include broadcaster BLE role support (sending advertising packets).",
            "value": true,
            "macro_name": "BLE_ROLE_BROADCASTER"
        },
        "ble-role-central": {
            "help": "Include central BLE role support (initiates connections), depends on observer role.",
            "value": true,
            "macro_name": "BLE_ROLE_CENTRAL"
        },
        "ble-role-peripheral": {
            "help": "Include peripheral BLE role support (accepts connections), depends on broadcaster role.",
            "value": true,
            "macro_name": "BLE_ROLE_PERIPHERAL"
        },
        "ble-feature-gatt-client": {
            "help": "Include Gatt Client BLE role support (requests remote operations on attributes), depends on peripheral and central role.",
            "value": true,
            "macro_name": "BLE_FEATURE_GATT_CLIENT"
        },
        "ble-feature-gatt-server": {
            "help": "Include Gatt Server BLE role support (executes operations on stored attributes), depends on peripheral or central role.",
            "value": true,
            "macro_name": "BLE_FEATURE_GATT_SERVER"
        },
        "ble-feature-security": {
            "help": "Include security support (key management), depends on peripheral or central role.",
            "value": true,
            "macro_name": "BLE_FEATURE_SECURITY"
        },
        "ble-feature-secure-connections": {
            "help": "Include secure connections support, depends on the security feature.",
            "value": true,
            "macro_name": "BLE_FEATURE_SECURE_CONNECTIONS"
        },
        "ble-feature-signing": {
            "help": "Include signing support (signed attribute writes), depends on the security feature.",
            "value": true,
            "macro_name": "BLE_FEATURE_SIGNING"
        },
        "ble-feature-whitelist": {
            "help": "Include whitelist support (peer filtering), depends on the security feature.",
            "value": true,
            "macro_name": "BLE_FEATURE_WHITELIST"
        },
        "ble-feature-privacy": {
            "help": "Include privacy support (random resolvable addresses), depends on the security feature.",
            "value": true,
            "macro_name": "BLE_FEATURE_PRIVACY"
        },
        "ble-feature-phy-management": {
            "help": "Additional PHY support (2M and Coded)",
            "value": true,
            "macro_name": "BLE_FEATURE_PHY_MANAGEMENT"
        },
        "ble-feature-extended-advertising": {
            "help": "Include extended advertising support (advertising sets, secondary channels).",
            "value": true,
            "macro_name": "BLE_FEATURE_EXTENDED_ADVERTISING"
        },
        "ble-feature-periodic-advertising": {
            "help": "Include periodic advertising support, depends on the extended advertising feature.",
            "value": true,
            "macro_name": "BLE_FEATURE_PERIODIC_ADVERTISING"
        },
        "ble-security-database-filesystem": {
            "help": "Use filesystem to store security db when path is passed in, depends on security manager.",
            "value": true,
            "macro_name": "BLE_SECURITY_DATABASE_FILESYSTEM"
        },
        "ble-security-database-kvstore": {
            "help": "Use KVStore to store security db, depends on security manager.",
            "value": false,
            "macro_name": "BLE_SECURITY_DATABASE_KVSTORE"
        },
        "ble-security-database-max-entries": {
            "help": "How many entries can be stored in the db, depends on security manager.",
            "value": 5,
            "macro_name": "BLE_SECURITY_DATABASE_MAX_ENTRIES"
        },
        "ble-gap-max-advertising-sets": {
            "help": "How many advertising sets the API can handle (this limits how much the stack can handle). Must be non-zero",
            "value": 15,
            "macro_name": "BLE_GAP_MAX_ADVERTISING_SETS"
        },
        "ble-gap-host-based-private-address-resolution": {
            "help": "Perform address resolution on the host, not the controller. Controller based privacy is preferred as it happens lower down the stack but this can be used in case controller based privacy is unavailable. If this is enabled the controller will not be used for privacy.",
            "value": true,
            "macro_name": "BLE_GAP_HOST_BASED_PRIVATE_ADDRESS_RESOLUTION"
        },
        "ble-gap-max-advertising-reports-pending-address-resolution": {
            "help": "How many advertising reports can be pending while awaiting private address resolution. This is only used if host privacy is enabled and controller privacy is disabled. Must be non-zero",
            "value": 16,
            "macro_name": "BLE_GAP_MAX_ADVERTISING_REPORTS_PENDING_ADDRESS_RESOLUTION"
        },
        "ble-gap-host-privacy-resolved-cache-size": {
            "help": "Used for host privacy. How many last resolved addresses to store to speed up resolution. This is especially valuable for resolving advertising which creates repeated queries for the same address.",
            "value": 16,
            "macro_name": "BLE_GAP_HOST_PRIVACY_RESOLVED_CACHE_SIZE"
        },
        "ble-gap-host-max-advertising-start-commands": {
            "help": "There can only be one outstanding advertising set command sent to the controller. This determines how many advertising set start commands can be queued on the host. Must be between 1 and BLE_GAP_MAX_ADVERTISING_SETS. If privacy is used, this must be at equal or higher than then number of simultaneously active sets with a private address.",
            "value": 4,
            "macro_name": "BLE_GAP_HOST_MAX_OUTSTANDING_ADVERTISING_START_COMMANDS"
        },

        "ble-passkey-display-reversed-digits-deprecation": {
          "help": "This option is part of the deprecation process. Set this to false to remove the deprecation notice. When set to true, the digits in the SecurityManager passkeyDiplay event are reversed. When set to false the digits are in the correct order.",
          "value": true,
          "macro_name": "BLE_PASSKEY_DISPLAY_REVERSED_DIGITS_DEPRECATION"
        },
        "trace-human-readable-enums": {
            "help": "More hexadecimal values in traces will be printed as human readable strings.",
            "value": false
        }
    },
    "target_overrides": {
        "MCU_NRF52840": {
            "ble-gap-host-based-private-address-resolution": false
        },
        "NUCLEO_WB55RG": {
            "ble-gap-host-based-private-address-resolution": false
        }
    }
}
